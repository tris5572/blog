---
// タグを元に、各タグの記事一覧ページを生成する。

import { CollectionEntry, getCollection } from 'astro:content';
import BaseHead from '@components/BaseHead.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import PostLink from '@components/PostLink.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';

export async function getStaticPaths() {
  const allPosts = (await getCollection('posts')).filter(
    (post) => !post.data.draft
  );
  const allTags = allPosts.map((post) => post.data.tags).flat();
  const uniqueTags = [...new Set(allTags)]; // 重複がないタグのリスト

  // 当該タグを持つ記事を、日付が新しいものから並べて返す。
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts

      .filter((post) => post.data.tags.includes(tag))
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

type Props = {
  posts: CollectionEntry<'posts'>[];
};

const { posts } = Astro.props;
const { tag } = Astro.params;
---

<!DOCTYPE html>
<html lang="ja">
  <head>
    <BaseHead
      title={`タグ:${tag} - ${SITE_TITLE}`}
      description={SITE_DESCRIPTION}
    />
  </head>
  <body>
    <Header />
    <main>
      <section>
        <h2 class="tag">タグ：{tag}</h2>
        {posts.map((post) => <PostLink {post} />)}
      </section>
    </main>
    <Footer />

    <style>
      .tag {
        text-align: center;
      }
    </style>
  </body>
</html>
