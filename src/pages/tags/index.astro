---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { href } from '../../scripts/util';
import type { string } from 'astro/zod';

const allPosts = await getCollection('blog');
const allTags = allPosts.map((post) => post.data.tags).flat();
const tagsList = [...new Set(allTags)]; // 重複がないタグのリスト

// 各タグの出現回数を数える。
const countedTags: { [key: string]: number } = {};
for (const tag of allTags) {
  if (tag != null) {
    countedTags[tag] = (countedTags[tag] || 0) + 1;
  }
}

// [ [タグ名, 出現回数] ] の形にして、出現回数の多い方からソート。
const timesOrderedTags = Object.keys(countedTags)
  .map((key): [string, number] => [key, countedTags[key]])
  .sort((a, b) => b[1] - a[1]);
---

<!DOCTYPE html>
<html lang="ja">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      ul {
        list-style-type: none;
        padding: unset;
        display: flex;
      }
      ul li {
        display: flex;
        padding: 0.5em;
        margin: 0.5em;
        border: 1px solid hsl(0, 37%, 45%);
        border-radius: 8px;
      }
      ul li a {
        color: inherit;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section>
        <ul>
          {
            timesOrderedTags.map((value) => (
              <li>
                <a
                  href={href(`/tags/${value[0]}`)}
                >{`${value[0]} (${value[1]})`}</a>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
